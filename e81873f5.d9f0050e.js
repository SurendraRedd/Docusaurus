(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{109:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return p})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return o})),n.d(t,"default",(function(){return l}));var a=n(2),r=n(6),s=(n(0),n(122)),p={id:"examples",title:"examples",sidebar_label:"examples",slug:"/examples.md"},i={unversionedId:"examples",id:"version-1.1.0/examples",isDocsHomePage:!1,title:"examples",description:"* Streamlit Sample codes *",source:"@site/versioned_docs\\version-1.1.0\\examples.md",slug:"/examples.md",permalink:"/Docusaurus/docs/1.1.0/examples.md",editUrl:"https://github.com/SurendraRedd/Docusaurus/versioned_docs/version-1.1.0/examples.md",version:"1.1.0",sidebar_label:"examples",sidebar:"version-1.1.0/someSidebar",previous:{title:"concepts",permalink:"/Docusaurus/docs/1.1.0/concepts.md"},next:{title:"mlapps",permalink:"/Docusaurus/docs/1.1.0/mlapps.md"}},o=[{value:"<strong> Codes </strong>",id:"codes",children:[]}],c={rightToc:o};function l(e){var t=e.components,p=Object(r.a)(e,["components"]);return Object(s.b)("wrapper",Object(a.a)({},c,p,{components:t,mdxType:"MDXLayout"}),Object(s.b)("h1",{id:"streamlit-sample-codes"},Object(s.b)("center",null,Object(s.b)("img",{src:n(201).default}),Object(s.b)("strong",{parentName:"h1"}," Streamlit Sample codes "))),Object(s.b)("hr",null),Object(s.b)("h3",{id:"codes"},Object(s.b)("strong",{parentName:"h3"}," Codes ")),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("p",{parentName:"li"},Object(s.b)("strong",{parentName:"p"},"Example- Usage of Slider, SelectBox & Miltiselect")),Object(s.b)("pre",{parentName:"li"},Object(s.b)("code",Object(a.a)({parentName:"pre"},{}),'  import streamlit as st\n  import numpy as np\n\n  x = st.slider(\'Select a value\')\n  st.write(x, \'squared value is\', x * x)\n\n  Exp = streamlit.selectbox("Choose your Experience: ", np.arange(1, 40, 1))\n\n  lan = st.multiselect("Which is your favorite language?", \n                   ["Python", "JavaScript",\n                   "Java", "C", "Julia"])\n'))),Object(s.b)("li",{parentName:"ul"},Object(s.b)("p",{parentName:"li"},Object(s.b)("strong",{parentName:"p"},"Example- Usage of dataframe")),Object(s.b)("pre",{parentName:"li"},Object(s.b)("code",Object(a.a)({parentName:"pre"},{}),'  import pandas as pd\n  import streamlit as st\n\n  @st.cache\n  def load_data():\n      df = pd.read_csv("data.csv") # csv\n      #df = pd.read_excel("data.excel") #excel\n      return df\n\n  # Will only run once if already cached\n  df = load_data()\n'))),Object(s.b)("li",{parentName:"ul"},Object(s.b)("p",{parentName:"li"},Object(s.b)("strong",{parentName:"p"},"Example- Jupyter Notebook")),Object(s.b)("pre",{parentName:"li"},Object(s.b)("code",Object(a.a)({parentName:"pre"},{}),"  # Run jupyter notebook in streamlit using 3 steps below\n  - jupyter nbconvert --to script scriptname.ipynb\n  - awk '!/ipython/' scriptname.py > [temp.py](http://temp.py/) && mv [temp.py](http://temp.py/) [app.py](http://app.py/) && rm scriptname.py\n  - streamlit run [app.py](http://app.py/)\n  Refer the blog more details https://learnups2020.wordpress.com/2020/11/07/streamlit-code-running-from-jupyter-notebook/\n  \n")))),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("p",{parentName:"li"},Object(s.b)("strong",{parentName:"p"},"Example- Altair Chart")),Object(s.b)("pre",{parentName:"li"},Object(s.b)("code",Object(a.a)({parentName:"pre"},{}),"  # Alt Chart example\n  import pandas as pd\n  import numpy as np\n  import altair as alt\n  import streamlit as st\n\n  df = pd.DataFrame(np.random.randn(100, 3), columns=['a', 'b', 'c'])\n  c = alt.Chart(df).mark_circle().encode(x='a', y='b', size='c',  \n                                  color='c')\n  st.altair_chart(c, width=-1)\n"))),Object(s.b)("li",{parentName:"ul"},Object(s.b)("p",{parentName:"li"},Object(s.b)("strong",{parentName:"p"},"Example- Simple Calculator App using sqlite DB")),Object(s.b)("pre",{parentName:"li"},Object(s.b)("code",Object(a.a)({parentName:"pre"},{}),'  # Simple Calculator\n  import pandas as pd\n  from pathlib import Path\n  import sqlite3\n  from sqlite3 import Connection\n  import streamlit as st\n\n  URI_SQLITE_DB = "test.db"\n\n  def main():\n  st.title("Simple Calculator")\n  st.markdown("Select two inputs from sidebar.")\n  \n  conn = get_connection(URI_SQLITE_DB)\n  init_db(conn)\n\n  build_sidebar(conn)\n  display_data(conn)\n  run_calculator(conn)\n\n  def init_db(conn: Connection):\n          conn.execute(\n                  """CREATE TABLE IF NOT EXISTS test\n                  (\n                          INPUT1 INT,\n                          INPUT2 INT\n                  );"""\n          )\n          conn.commit()\n\n  def build_sidebar(conn: Connection):\n          st.sidebar.header("Inputs")\n          input1 = st.sidebar.slider("value-1", 0, 100)\n          input2 = st.sidebar.slider("value-2", 0, 100)\n          if st.sidebar.button("Save to database"):\n                  conn.execute(f"INSERT INTO test (INPUT1, INPUT2) VALUES ({input1}, {input2})")\n                  conn.commit()\n\n  def display_data(conn: Connection):\n          if st.checkbox("Display data from the database"):\n                  st.dataframe(get_data(conn))\n\n  def run_calculator(conn: Connection):\n          if st.button("Calculate Sum"):\n                  st.info("Sum of two inputs function is called.")\n                  df = get_data(conn)\n                  st.write(df.sum())\n\n  def get_data(conn: Connection):\n          df = pd.read_sql("SELECT * FROM test", con=conn)\n          return df\n\n  @st.cache(hash_funcs={Connection: id})\n  def get_connection(path: str):\n          """Put the connection in cache to reuse if path does not change between Streamlit reruns.\n          NB : https://stackoverflow.com/questions/48218065/programmingerror-sqlite-objects-created-in-a-thread-can-only-be-used-in-that-sa\n          """\n          return sqlite3.connect(path, check_same_thread=False)\n\n  if __name__ == "__main__":\n          main()\n'))),Object(s.b)("li",{parentName:"ul"},Object(s.b)("p",{parentName:"li"},Object(s.b)("strong",{parentName:"p"},"Example- ProgressBar in sidebar and generate chart")),Object(s.b)("pre",{parentName:"li"},Object(s.b)("code",Object(a.a)({parentName:"pre"},{}),'  import streamlit as st \n  import time \n  import numpy as np\n\n  progress_bar = st.sidebar.progress(0)\n  status_text = st.sidebar.empty()\n  last_rows = np.random.randn(1, 1)\n  chart = st.line_chart(last_rows)\n\n  for i in range(1, 101):\n  new_rows = last_rows[-1, :] + np.random.randn(5, 1).cumsum(axis=0)\n  status_text.text("%i%% Complete" % i)\n  chart.add_rows(new_rows)\n  progress_bar.progress(i)\n  last_rows = new_rows\n  time.sleep(0.05)\n\n  progress_bar.empty()\n\n  st.button("Re-run")\n'))),Object(s.b)("li",{parentName:"ul"},Object(s.b)("p",{parentName:"li"},Object(s.b)("strong",{parentName:"p"},"Example- Streamlit Components Example")),Object(s.b)("pre",{parentName:"li"},Object(s.b)("code",Object(a.a)({parentName:"pre"},{}),'  import streamlit as st\n\n  st.sidebar.subheader("Component 1")\n\n  t1 = st.sidebar.text_input("Component 1 name")\n  s1 = st.sidebar.slider("Component 1 value")\n\n  st.sidebar.markdown("---")\n\n  st.sidebar.subheader("Component 2")\n  t2 = st.sidebar.text_input("Component 2 name")\n  s2 = st.sidebar.slider("Component 2")\n\n  st.title("Hello!")\n\n  st.write(t1, s1)\n  st.write(t2, s2)\n\n  template = """\n  <div class="markdown-text-container stText" style="width: 698px;">\n  <div style="font-size: small;">This is paragraph 1 text.</div>\n  <p>This is paragraph 2 text.</p>\n  <p>This is paragraph 3 text.</p>\n  </div>\n  """\n'))),Object(s.b)("li",{parentName:"ul"},Object(s.b)("p",{parentName:"li"},Object(s.b)("strong",{parentName:"p"},"Example- Streamlit Code Share Example")),Object(s.b)("pre",{parentName:"li"},Object(s.b)("code",Object(a.a)({parentName:"pre"},{}),'  Prerequisites\n  - pip install streamlit-embedcode\n  import streamlit as st\n  from streamlit_embedcode import github_gist, gitlab_snippet, pastebin_snippet, codepen_snippet, ideone_snippet, tagmycode_snippet\n\n  st.title("Github Gist Snippet")\n  github_gist("https://gist.github.com/SurendraRedd/feaa6f29961501fa9fce7a45abc14651")\n\n  st.title("Gitlab Snippet")\n  gitlab_snippet("https://gitlab.com/snippets/2037642", height=400)\n\n  st.title("Pastebin Snippet")\n  pastebin_snippet("https://pastebin.com/Ryr8q1kq", width = 600, scrolling = False)\n\n  st.title("Code Pen Snippet")\n  codepen_snippet("https://codepen.io/surendra1985/pen/wvGREBb", width = 600, scrolling = False)\n\n  st.title("Ideone Snippet")\n  ideone_snippet("https://ideone.com/tXCake")\n\n  st.title("Tagmycode Snippet")\n  tagmycode_snippet("https://tagmycode.com/snippet/14517/streamlit-basic-concepts#.X6fD8WgzZPY")\n')))))}l.isMDXComponent=!0},122:function(e,t,n){"use strict";n.d(t,"a",(function(){return m})),n.d(t,"b",(function(){return u}));var a=n(0),r=n.n(a);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),l=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=l(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=l(n),b=a,u=m["".concat(p,".").concat(b)]||m[b]||d[b]||s;return n?r.a.createElement(u,i(i({ref:t},c),{},{components:n})):r.a.createElement(u,i({ref:t},c))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,p=new Array(s);p[0]=b;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:a,p[1]=i;for(var c=2;c<s;c++)p[c]=n[c];return r.a.createElement.apply(null,p)}return r.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},201:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/Code-4134181021dff07dfbf93dbcc5f63efa.png"}}]);